plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
}

apply(from: "../dependencies.gradle")
apply(from: "../project.gradle")

android {
    compileSdkVersion projectConfig.compileSdkVersion
    buildToolsVersion projectConfig.buildToolsVersion

    defaultConfig {
        applicationId projectConfig.applicationId
        minSdkVersion projectConfig.minSdkVersion
        targetSdkVersion projectConfig.targetSdkVersion
        versionCode projectVersion.major * 10000 + projectVersion.minor * 100 + projectVersion.minor
        versionName "${projectVersion.major}.${projectVersion.minor}.${projectVersion.patch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":domain")
    implementation projectDependencies.kotlinStdlib
    implementation projectDependencies.kotlinReflect
    implementation projectDependencies.materialDesign
    implementation projectDependencies.appCompat
    implementation projectDependencies.koin
    implementation projectDependencies.navigationFragment
    implementation projectDependencies.navigationFragment
    implementation projectDependencies.rxJava
    implementation projectDependencies.rxAndroid

    testImplementation testDependencies.androidTestCore
    testImplementation testDependencies.mockk
    testImplementation testDependencies.junit
}

task jacocoTestReport(type: JacocoReport, dependsOn: ["testDebugUnitTest"]) {
    final fileExclusions = [
            'android/**/*.*',
            '**/BuildConfig.*',
            '**/R.class',
            '**/R$*.class',
            '**/*Adapter*.*',
            '**/*ViewHolder*.*',
            '**/*Module*.*',
            '**/*Activity*.*',
            '**/*Fragment*.*',
            '**/*Application*.*',
            '**/SchedulerProvider**.*',
            '**/ViewBindingHolder**.*',
            '**/RequestInterceptor.*'
    ]

    final classDirectoryTree = fileTree(
            dir: "${project.rootDir}/app/build/tmp/kotlin-classes/debug",
            excludes: fileExclusions
    )

    final coverageSourceDir = "${project.rootDir}/app/src/main/java"

    final executionDataDir = "${project.rootDir}/app/src/main/java"

    reports {
        html {
            enabled true
            destination file('build/reports/jacoco/html')
        }
        xml {
            enabled true
            destination file('build/reports/jacoco/jacocoTestReport.xml')
        }
    }

    classDirectories.setFrom(files(classDirectoryTree))

    sourceDirectories.setFrom(files(coverageSourceDir))
    additionalSourceDirs.setFrom(files(coverageSourceDir))

    executionData.setFrom(files(executionDataDir))
}
